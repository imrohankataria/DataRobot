geom_col(aes(fill=payment_type)) +
coord_flip() +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
coord_flip() +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, - amtFraud), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
coord_flip() +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, - amtFraud), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = payment_network, y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
coord_flip() +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = roeder(payment_network, -amtFraud), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
coord_flip() +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
coord_flip() +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud)) +
geom_col(aes(fill=payment_type)) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, - amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = arrange(desc(payment_network, - amtFraud)), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = arrange(desc(payment_network)), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
scale_y_continuous(
# Features of the first axis
name = "Amount Fraud",
# Add a second axis and specify its features
sec.axis = sec_axis( trans=~.*10, name="Second Axis")
) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
scale_y_continuous(
# Features of the first axis
name = "Amount Fraud",
# Add a second axis and specify its features
sec.axis = sec_axis( trans=email_domain, name="Second Axis")
) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
scale_y_continuous(
# Features of the first axis
name = "Amount Fraud",
# Add a second axis and specify its features
sec.axis = sec_axis( trans=~email_domain, name="Second Axis")
) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
scale_y_continuous(
# Features of the first axis
name = "Amount Fraud",
# Add a second axis and specify its features
sec.axis = sec_axis( ~email_domain, name="Second Axis")
) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
scale_y_continuous(
# Features of the first axis
name = "Amount Fraud",
# Add a second axis and specify its features
sec.axis = sec_axis( ~.*email_domain, name="Second Axis")
) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud, session_length_in_mins) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
scale_y_continuous(
# Features of the first axis
name = "Amount Fraud",
# Add a second axis and specify its features
sec.axis = sec_axis( ~.*session_length_in_mins, name="Second Axis")
) +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, email_domain, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
theme_classic()
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount Fraud by payment network and payment type?",
caption = 'See more plots by me on Instagram @byrohankataria',
theme = theme(plot.title = element_text(size = 18),
plot.caption = element_text(face = "italic")),
x = "Payment Network",
y = "Amount Fraud") +
theme_classic()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount Fraud by payment network and payment type?",
caption = 'See more plots by me on Instagram @byrohankataria',
theme = theme(plot.title = element_text(size = 18),
plot.caption = element_text(face = "italic")),
x = "Payment Network",
y = "Amount Fraud") +
theme_minimal()
theme_minimal()
theme_minimal()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount Fraud by payment network and payment type?",
caption = 'See more plots by me on Instagram @byrohankataria',
x = "Payment Network",
y = "Amount Fraud") +
theme(plot.title = element_text(size = 18),
plot.caption = element_text(face = "italic")) +
theme_minimal()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount Fraud by payment network and payment type?",
caption = "See more plots by me on Instagram @byrohankataria",
x = "Payment Network",
y = "Amount Fraud") +
theme(plot.title = element_text(size = 18),
plot.caption = element_text(face = "italic")) +
theme_minimal()
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount Fraud by payment network and payment type?",
caption = "See more plots by me on Instagram @byrohankataria",
x = "Payment Network",
y = "Amount Fraud") +
theme(plot.title = element_text(size = 18),
plot.caption = element_text(color = "#4875B4", face = 'bold')) +
theme_minimal()
theme(plot.title = element_text(size = 18),
plot.caption = element_text(color = "#4875B4", face = 'bold'))
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount Fraud by payment network and payment type?",
caption = "See more plots by me on Instagram @byrohankataria",
x = "Payment Network",
y = "Amount Fraud") +
theme_minimal() +
theme(plot.title = element_text(size = 18),
plot.caption = element_text(color = "#4875B4", face = 'bold'))
credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount Fraud by payment network and payment type?",
caption = "See more plots by me on Instagram @byrohankataria",
x = "Payment Network",
y = "Amount Fraud") +
theme_minimal() +
theme(plot.title = element_text(size = 18),
plot.caption = element_text(color = "#4875B4", face = 'italic'))
datarobot_token <- "NWYzNzQ1YzI5OWJjYzk2MjZjZDI4MDZjOkxhZzRkcW95VzE2OFRweHowSXk2b1h0RmNZOE5oQjlhZUVWaTg5WDRDRGs9"
#Connect to DataRobot
ConnectToDataRobot(
endpoint = 'https://app.datarobot.com/api/v2',
token = datarobot_token
)
plot1 <- credit %>%
filter(amtFraud > 1) %>%
group_by(payment_network, payment_type, amtFraud) %>%
summarise() %>%
ggplot(aes(x = reorder(payment_network, -amtFraud), y = amtFraud, fill=payment_type)) +
geom_bar(stat = "identity") +
labs(title = "Amount Fraud & Payment Network",
subtitle = "What is Total amount fraud by payment network and payment type?",
caption = "See more plots by me on Instagram @byrohankataria",
x = "Payment Network",
y = "Amount Fraud") +
theme_minimal() +
theme(plot.title = element_text(size = 18),
plot.caption = element_text(color = "#4875B4", face = 'italic'))
StartProject(credit, "Credit_Card_Fraud", target = "amtFraud", mode = "quick", workerCount = 8)
#Evaluating Models
project <- GetProject("5f60da9cc7ae240ea66631c3")
models <-ListModels(project, orderBy = '-metric')
model <- Filter(function(m) m$samplePct >= 65 & m$samplePct < 81, models)
model <- GetModel(project, model[[1]]$modelId)
model
blueprintId <- model$blueprintId
blueprintChart <- GetBlueprintChart(projectId, blueprintId)
blueprintChart <- GetBlueprintChart(model$projectId, blueprintId)
BlueprintChartToGraphviz(blueprintChart)
install.packages("GGally")
library(GGally)
library(GGally)
library(network)
install.packages("network")
library(network)
bp <- BlueprintChartToGraphviz(blueprintChart)
ggnet2(bp)
bp
bs %>%
ggnet2()
bp %>%
ggnet2()
install.packages('sna')
library(sna)
ggnet2(bp)
bp
bp %>%
as.network.matrix()
bp %>%
as.data.frame()
model
ReformatMetrics(metricsList)
model
modelIds <- c("5f60dd8731d9e85d9d6a851f","5f60f0e24bda4256c43115bc")
RequestBlender(project, modelIds, "Average")
RequestBlender(project, modelIds, "AVG")
allmodels <- c("5f60dd8731d9e85d9d6a851f","5f60f0e24bda4256c43115bc","5f60f8af4bda420be296eb24")
allmodels <- c("5f60dd8731d9e85d9d6a851f","5f60f0e24bda4256c43115bc","5f60f8af4bda420be296eb24")
###Feature Effect
routeString <- datarobot:::UrlJoin("projects", project, "models", model, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
response <- datarobot:::DataRobotGET(routeString)
library(httr)
library(jsonlite)
library(rjson)
response <- datarobot:::DataRobotGET(routeString)
response <- datarobot:::DataRobotGET(routeString)
###Feature Effect
routeString <- datarobot:::UrlJoin("projects", project, "models", model, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
library(tidyverse)
response <- datarobot:::DataRobotGET(routeString)
###Feature Effect
projectid <- "5f60da9cc7ae240ea66631c3"
routeString <- datarobot:::UrlJoin("projects", projectid, "models", model, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
routeString <- datarobot:::UrlJoin("projects", projectid , "models", model, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
###Feature Effect
projectid <- "5f60da9cc7ae240ea66631c3"
routeString <- datarobot:::UrlJoin("projects", projectid , "models", model, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(rjson)
library(datarobot)
library(dplyr)
library(tidyr)
library(ggplot2)
username= "imrohankataria@gmail.com"
endpoint='https://app.datarobot.com/api/v2'
token=datarobot_token
ConnectToDataRobot(endpoint = endpoint, token = token)
model
routeString <- datarobot:::UrlJoin("projects", projectid , "models", model$modelId, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
model_id <- "5f60dd8731d9e85d9d6a851f"
project_id <- "5f60da9cc7ae240ea66631c3"
routeString <- datarobot:::UrlJoin("projects", project_id, "models", model_id, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
response <- datarobot:::DataRobotGET(routeString)
response <- datarobot:::DataRobotGET(routeString)
response <- datarobot:::DataRobotGET(routeString)
routeString <- datarobot:::UrlJoin("projects", project_id, "models", model_id, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
response
as.tibble.featureEffects = function(rawReturn) {
featureEffects = tibble(FeatureName = rawReturn$featureEffects$featureName,
FeatureImpact = rawReturn$featureEffects$featureImpactScore,
FeatureType = rawReturn$featureEffects$featureType,
FeatureEffects = rawReturn$featureEffects$partialDependence$data) %>%
arrange(desc(FeatureImpact))
return(featureEffects)
}
partial_dependence <- as.tibble.featureEffects(response)
partial_dependence_df <- unnest(partial_dependence, cols = "FeatureEffects")
partial_dependence_df  %>%
filter(FeatureName == "number_items")  %>%
mutate(label = as.numeric(label)) %>%
arrange(label)  %>%
ggplot(aes(x=label, y=dependence, group=1), colours = "blue") +
geom_line( color="#FF5600",) +
labs(x="label",
y='probability of fraud',
title="partial dependence: number_items") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
partial_dependence_df  %>%
filter(FeatureName == "ship_to_alternate_address")  %>%
mutate(label = as.numeric(label)) %>%
arrange(label)  %>%
ggplot(aes(x=label, y=dependence, group=1), colours = "blue") +
geom_line( color="#FF5600",) +
labs(x="label",
y='probability of fraud',
title="partial dependence: number_items") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
library(GGally)
library(network)
library(sna)
library(httr)
library(jsonlite)
library(rjson)
library(tidyverse)
#Creating Model Insight Function
model_insight <- function(project_id, model_id) {
#Getting feature Effect
## Get the Partial Dependence Response Obect
routeString <- datarobot:::UrlJoin("projects", project_id, "models", model_id, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
## Convert Response to DataFrame
as.tibble.featureEffects = function(rawReturn) {
featureEffects = tibble(FeatureName = rawReturn$featureEffects$featureName,
FeatureImpact = rawReturn$featureEffects$featureImpactScore,
FeatureType = rawReturn$featureEffects$featureType,
FeatureEffects = rawReturn$featureEffects$partialDependence$data) %>%
arrange(desc(FeatureImpact))
partial_dependence <- as.tibble.featureEffects(response)
partial_dependence_df <- unnest(partial_dependence, cols = "FeatureEffects")
}
}
model_insight("5f60da9cc7ae240ea66631c3","5f60dd8731d9e85d9d6a851f")
partial_dependence_df
model_insight("5f60da9cc7ae240ea66631c3","5f60dd8731d9e85d9d6a851f")
partial_dependence_df
model_insight("5f60da9cc7ae240ea66631c3","5f60dd8731d9e85d9d6a851f")
partial_dependence_df
#Creating Model Insight Function
model_insight <- function(project_id, model_id) {
#Getting feature Effect
## Get the Partial Dependence Response Obect
routeString <- datarobot:::UrlJoin("projects", project_id, "models", model_id, "featureEffects")
response <- datarobot:::DataRobotGET(routeString)
## Convert Response to DataFrame
as.tibble.featureEffects = function(rawReturn) {
featureEffects = tibble(FeatureName = rawReturn$featureEffects$featureName,
FeatureImpact = rawReturn$featureEffects$featureImpactScore,
FeatureType = rawReturn$featureEffects$featureType,
FeatureEffects = rawReturn$featureEffects$partialDependence$data) %>%
arrange(desc(FeatureImpact))
partial_dependence <- as.tibble.featureEffects(response)
partial_dependence_df <- unnest(partial_dependence, cols = "FeatureEffects")
}
return(partial_dependence_df)
}
model_insight("5f60da9cc7ae240ea66631c3","5f60dd8731d9e85d9d6a851f")
model_insight("5f60da9cc7ae240ea66631c3","5f60dd8731d9e85d9d6a851f")
